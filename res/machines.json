{
  "machines": [
      {
        "id": "flipHA",
        "name": "Flip H&A",
        "desc": "Changes H>A and A>H",
        "tape": "HAHAHAHAAA",
        "code": "I,H,I,A,R\nI,A,I,H,R"
      },
      {
        "id": "flippedBinary",
        "name": "Flipped Binary?",
        "desc": "Checks if values are alternate",
        "tape": "101010001",
        "code": "I,0,0,R\nI,1,1,R\n0,0,R,S\n0,1,1,R\n1,0,0,R\n1,1,R,S"
      },    
      {
        "id": "seq0n1m",
        "name": "0^n 1^m",
        "desc": "0000 ~ 111111",
        "tape": "0000011111",
        "code": "I, ,A,S\nI,1,R,S\nI,0,0,R\n0, ,R,S\n0,0,R\n0,1,1,R\n1, ,A,S\n1,0,R,R\n1,1,R"
      },
      {
        "id": "seq0n1n",
        "name": "0^n 1^n",
        "desc": "000 ~ 111",
        "tape": "000000000000111111111111",
        "code": "I, ,R,S\nI,1,R,S\nI,0,S, ,R\n\n; SkipThrough\nS,0,R\nS,1,R\nS, ,Sx,L\nSx,1,S1, ,L\nS1, ,A,S\nS1,0,R,S\nS1,1,B,L\n\n; GoBack\nB,1,L\nB,0,L\nB, ,I,R"
      },
      {
        "id": "seq0n1n2",
        "name": "0^n 1^n best",
        "desc": "000 ~ 111 n*log(n)",
        "tape": "000000000000111111111111",
        "code": "I, ,A,S\nI,x,R,S\nI,1,R,S\nI,0,Pi,S\n\n; Init check\nPi,x,R\nPi, ,A,S\nPi,0,Pe,S\nPi,1,Pe,S\n; Even check\nPe,x,R\nPe,0,Po,R\nPe,1,Po,R\nPe, ,C1,L\nPo,x,R\nPo,0,Pe,R\nPo,1,Pe,R\nPo, ,R,S\n\n; Cut 0/1\nC0,x,L\nC0,0,S0,x,L\nC0,1,R,S\nC0, ,Pe,R\nC1,x,L\nC1,0,C0,S\nC1,1,S1,x,L\nC1, ,R,S\n; Skip 0/1\nS0,x,L\nS0,0,C0,L\nS0,1,R,S\nS0, ,Pi,R\nS1,x,L\nS1,0,C0,S\nS1,1,C1,L\nS1, ,R,S"
      },
      {
        "id": "binaryAdd1",
        "name": "Binary +1",
        "desc": "Adds 1 to binary number...",
        "tape": "11111111",
        "code": "I,0,0,#,R\nI,1,1,#,R\n;shift 1\n0,0,0,0,R\n0,1,1,0,R\n0, ,s,0,S\n1,0,0,1,R\n1,1,1,1,R\n1, ,s,1,S\n; sum/carry\ns, ,s, ,L\ns,0,b,1,L\ns,1,c,0,L\nc,1,c,0,L\nc,0,b,1,L\nc,#,o,#,R\n; go back\nb,0,b,0,L\nb,1,b,1,L\nb,#,A,#,R\n; overflow\no,0,o0,1,R\no, ,b,0,R\no0,0,o0,0,R\no0, ,b,0,L"
      },
      {
        "id": "binarySub1",
        "name": "Binary -1",
        "desc": "Subtracts 1 to binary number...",
        "tape": "000111100",
        "code": "I,0,I, ,R\nI,1,1,#,R\n;shift 1\n0,0,0,0,R\n0,1,1,0,R\n0, ,s,0,S\n1,0,0,1,R\n1,1,1,1,R\n1, ,s,1,S\n; sub\ns,0,s,1,L\ns,1,b,0,L\n; back\nb,0,b,0,L\nb,1,b,1,L\nb,#,A,#,R"
      },
      {
        "id": "num0s1s",
        "name": "Num 0s = 1s",
        "desc": "Checks if num 0's = num 1's",
        "tape": "101011001001",
        "code": "I, ,A, ,S\nI,0,S1, ,R\nI,1,S0, ,R\nI,x,I, ,R\n;search\nS0,0,B,x,L\nS0,1,S0,1,R\nS0, ,R, ,S\nS0,x,S0,x,R\nS1,1,B,x,L\nS1,0,S1,0,R\nS1, ,R, ,S\nS1,x,S1,x,R\n;go back\nB,0,B,0,L\nB,1,B,1,L\nB,x,B,x,L\nB, ,I, ,R"
      },
      {
        "id": "isBinPalindrome",
        "name": "Binary Palindrome?",
        "desc": "Checks if palindrome",
        "tape": "0011100",
        "code": "I, ,A,S\nI,0,L0, ,R\nI,1,L1, ,R\nL0, ,0,L\nL0,0,R\nL0,1,R\nL1, ,1,L\nL1,0,R\nL1,1,R\n0, ,A,S\n0,0,B, ,L\n0,1,R,S\n1, ,A,S\n1,0,R,S\n1,1,B, ,L\nB,0,L\nB,1,L\nB, ,I,R"
      }
    ]
}